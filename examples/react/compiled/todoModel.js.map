{"version":3,"sources":["../js/todoModel.js"],"names":["app","Utils","TodoModel","key","todos","store","onChanges","prototype","subscribe","onChange","push","inform","forEach","cb","addTodo","title","concat","id","uuid","completed","toggleAll","checked","map","todo","extend","toggle","todoToToggle","destroy","filter","candidate","save","todoToSave","text","clearCompleted"],"mappings":"AAIA,GAAIA,KAAMA,KAAO,EAAjB,CAEA,CAAC,UAAY,CACZ,aAEA,GAAIC,OAAQD,IAAIC,KAAhB,CAMAD,IAAIE,SAAJ,CAAgB,SAAUC,GAAV,CAAe,CAC9B,KAAKA,GAAL,CAAWA,GAAX,CACA,KAAKC,KAAL,CAAaH,MAAMI,KAAN,CAAYF,GAAZ,CAAb,CACA,KAAKG,SAAL,CAAiB,EACjB,CAJD,CAMAN,IAAIE,SAAJ,CAAcK,SAAd,CAAwBC,SAAxB,CAAoC,SAAUC,QAAV,CAAoB,CACvD,KAAKH,SAAL,CAAeI,IAAf,CAAoBD,QAApB,CACA,CAFD,CAIAT,IAAIE,SAAJ,CAAcK,SAAd,CAAwBI,MAAxB,CAAiC,UAAY,CAC5CV,MAAMI,KAAN,CAAY,KAAKF,GAAjB,CAAsB,KAAKC,KAA3B,EACA,KAAKE,SAAL,CAAeM,OAAf,CAAuB,SAAUC,EAAV,CAAc,CAAEA,IAAO,CAA9C,CACA,CAHD,CAKAb,IAAIE,SAAJ,CAAcK,SAAd,CAAwBO,OAAxB,CAAkC,SAAUC,KAAV,CAAiB,CAClD,KAAKX,KAAL,CAAa,KAAKA,KAAL,CAAWY,MAAX,CAAkB,CAC9BC,GAAIhB,MAAMiB,IAAN,EAD0B,CAE9BH,MAAOA,KAFuB,CAG9BI,UAAW,KAHmB,CAAlB,CAAb,CAMA,KAAKR,MAAL,EACA,CARD,CAUAX,IAAIE,SAAJ,CAAcK,SAAd,CAAwBa,SAAxB,CAAoC,SAAUC,OAAV,CAAmB,CAKtD,KAAKjB,KAAL,CAAa,KAAKA,KAAL,CAAWkB,GAAX,CAAe,SAAUC,IAAV,CAAgB,CAC3C,MAAOtB,OAAMuB,MAAN,CAAa,EAAb,CAAiBD,IAAjB,CAAuB,CAACJ,UAAWE,OAAZ,CAAvB,CACP,CAFY,CAAb,CAIA,KAAKV,MAAL,EACA,CAVD,CAYAX,IAAIE,SAAJ,CAAcK,SAAd,CAAwBkB,MAAxB,CAAiC,SAAUC,YAAV,CAAwB,CACxD,KAAKtB,KAAL,CAAa,KAAKA,KAAL,CAAWkB,GAAX,CAAe,SAAUC,IAAV,CAAgB,CAC3C,MAAOA,QAASG,YAAT,CACNH,IADM,CAENtB,MAAMuB,MAAN,CAAa,EAAb,CAAiBD,IAAjB,CAAuB,CAACJ,UAAW,CAACI,KAAKJ,SAAlB,CAAvB,CACD,CAJY,CAAb,CAMA,KAAKR,MAAL,EACA,CARD,CAUAX,IAAIE,SAAJ,CAAcK,SAAd,CAAwBoB,OAAxB,CAAkC,SAAUJ,IAAV,CAAgB,CACjD,KAAKnB,KAAL,CAAa,KAAKA,KAAL,CAAWwB,MAAX,CAAkB,SAAUC,SAAV,CAAqB,CACnD,MAAOA,aAAcN,IACrB,CAFY,CAAb,CAIA,KAAKZ,MAAL,EACA,CAND,CAQAX,IAAIE,SAAJ,CAAcK,SAAd,CAAwBuB,IAAxB,CAA+B,SAAUC,UAAV,CAAsBC,IAAtB,CAA4B,CAC1D,KAAK5B,KAAL,CAAa,KAAKA,KAAL,CAAWkB,GAAX,CAAe,SAAUC,IAAV,CAAgB,CAC3C,MAAOA,QAASQ,UAAT,CAAsBR,IAAtB,CAA6BtB,MAAMuB,MAAN,CAAa,EAAb,CAAiBD,IAAjB,CAAuB,CAACR,MAAOiB,IAAR,CAAvB,CACpC,CAFY,CAAb,CAIA,KAAKrB,MAAL,EACA,CAND,CAQAX,IAAIE,SAAJ,CAAcK,SAAd,CAAwB0B,cAAxB,CAAyC,UAAY,CACpD,KAAK7B,KAAL,CAAa,KAAKA,KAAL,CAAWwB,MAAX,CAAkB,SAAUL,IAAV,CAAgB,CAC9C,MAAO,CAACA,KAAKJ,SACb,CAFY,CAAb,CAIA,KAAKR,MAAL,EACA,CAED,CAhFD","file":"todoModel.js","sourcesContent":["/*jshint quotmark:false */\n/*jshint white:false */\n/*jshint trailing:false */\n/*jshint newcap:false */\nvar app = app || {};\n\n(function () {\n\t'use strict';\n\n\tvar Utils = app.Utils;\n\t// Generic \"model\" object. You can use whatever\n\t// framework you want. For this application it\n\t// may not even be worth separating this logic\n\t// out, but we do this to demonstrate one way to\n\t// separate out parts of your application.\n\tapp.TodoModel = function (key) {\n\t\tthis.key = key;\n\t\tthis.todos = Utils.store(key);\n\t\tthis.onChanges = [];\n\t};\n\n\tapp.TodoModel.prototype.subscribe = function (onChange) {\n\t\tthis.onChanges.push(onChange);\n\t};\n\n\tapp.TodoModel.prototype.inform = function () {\n\t\tUtils.store(this.key, this.todos);\n\t\tthis.onChanges.forEach(function (cb) { cb(); });\n\t};\n\n\tapp.TodoModel.prototype.addTodo = function (title) {\n\t\tthis.todos = this.todos.concat({\n\t\t\tid: Utils.uuid(),\n\t\t\ttitle: title,\n\t\t\tcompleted: false\n\t\t});\n\n\t\tthis.inform();\n\t};\n\n\tapp.TodoModel.prototype.toggleAll = function (checked) {\n\t\t// Note: it's usually better to use immutable data structures since they're\n\t\t// easier to reason about and React works very well with them. That's why\n\t\t// we use map() and filter() everywhere instead of mutating the array or\n\t\t// todo items themselves.\n\t\tthis.todos = this.todos.map(function (todo) {\n\t\t\treturn Utils.extend({}, todo, {completed: checked});\n\t\t});\n\n\t\tthis.inform();\n\t};\n\n\tapp.TodoModel.prototype.toggle = function (todoToToggle) {\n\t\tthis.todos = this.todos.map(function (todo) {\n\t\t\treturn todo !== todoToToggle ?\n\t\t\t\ttodo :\n\t\t\t\tUtils.extend({}, todo, {completed: !todo.completed});\n\t\t});\n\n\t\tthis.inform();\n\t};\n\n\tapp.TodoModel.prototype.destroy = function (todo) {\n\t\tthis.todos = this.todos.filter(function (candidate) {\n\t\t\treturn candidate !== todo;\n\t\t});\n\n\t\tthis.inform();\n\t};\n\n\tapp.TodoModel.prototype.save = function (todoToSave, text) {\n\t\tthis.todos = this.todos.map(function (todo) {\n\t\t\treturn todo !== todoToSave ? todo : Utils.extend({}, todo, {title: text});\n\t\t});\n\n\t\tthis.inform();\n\t};\n\n\tapp.TodoModel.prototype.clearCompleted = function () {\n\t\tthis.todos = this.todos.filter(function (todo) {\n\t\t\treturn !todo.completed;\n\t\t});\n\n\t\tthis.inform();\n\t};\n\n})();\n"]}